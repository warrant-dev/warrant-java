plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
}

group = "dev.warrant"
version = "3.0.0"

repositories {
    mavenCentral()
}

dependencies {
    implementation group: 'jakarta.ws.rs', name: 'jakarta.ws.rs-api', version: '3.1.0'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.15.2'
    implementation group: 'org.glassfish.jersey.core', name: 'jersey-common', version: '3.1.2'

    testImplementation(platform('org.junit:junit-bom:5.9.3'))
    testImplementation('org.junit.jupiter:junit-jupiter')
    testImplementation('org.mockito:mockito-core:5.+')
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
        showStandardStreams = true
        showStackTraces = true
        exceptionFormat = "full"
	}
}

java {
    withJavadocJar()
    withSourcesJar()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'warrant-java'
            from components.java
            pom {
                name = 'Warrant Java SDK'
                description = 'Warrant SDK for Java.'
                url = 'https://github.com/warrant-dev/warrant-java'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        // id =
                        name = 'Aditya Kajla'
                        email = 'hello@warrant.dev'
                    }
                }
                scm {
                    connection = 'scm:git:https://github.com/warrant-dev/warrant-java.git'
                    developerConnection = 'scm:git:https://github.com/warrant-dev/warrant-java.git'
                    url = 'https://github.com/warrant-dev/warrant-java'
                }
            }
        }
    }
    repositories {
        maven {
            def releasesRepoUrl = 'https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/'
            def snapshotsRepoUrl = 'ttps://s01.oss.sonatype.org/content/repositories/snapshots/'
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username = System.getenv("OSSRH_USERNAME")
                password = System.getenv("OSSRH_PASSWORD")
            }
        }
    }
}

signing {
    def signingKey = System.getenv("PGP_SECRET")
    def signingPassword = System.getenv("PGP_PASSWORD")
    useInMemoryPgpKeys(signingKey, signingPassword)
    sign publishing.publications.mavenJava
}

javadoc {
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}
